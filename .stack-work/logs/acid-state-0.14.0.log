Configuring acid-state-0.14.0...
Building acid-state-0.14.0...
Preprocessing library acid-state-0.14.0...
[ 1 of 15] Compiling Data.Acid.CRC    ( src/Data/Acid/CRC.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/CRC.o )
[ 2 of 15] Compiling Paths_acid_state ( .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/autogen/Paths_acid_state.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Paths_acid_state.o )
[ 3 of 15] Compiling Data.Acid.Archive ( src/Data/Acid/Archive.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Archive.o )
[ 4 of 15] Compiling FileIO           ( src-unix/FileIO.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/FileIO.o )
[ 5 of 15] Compiling Data.Acid.Core   ( src/Data/Acid/Core.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Core.o )
[ 6 of 15] Compiling Data.Acid.Log    ( src/Data/Acid/Log.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Log.o )
[ 7 of 15] Compiling Data.Acid.Common ( src/Data/Acid/Common.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Common.o )

src/Data/Acid/Common.hs:21:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[ 8 of 15] Compiling Data.Acid.Abstract ( src/Data/Acid/Abstract.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Abstract.o )

src/Data/Acid/Abstract.hs:51:27: Warning:
    Variable ‘event’ is implicitly quantified due to a context
    Use explicit forall syntax instead.
    This will become an error in GHC 7.12.
    In the type ‘(QueryEvent event, EventState event ~ st) =>
                 event -> IO (EventResult event)’
    In the definition of data constructor ‘AcidState’
[ 9 of 15] Compiling Data.Acid.TemplateHaskell ( src/Data/Acid/TemplateHaskell.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/TemplateHaskell.o )

src/Data/Acid/TemplateHaskell.hs:14:1: Warning:
    The import of ‘Data.Maybe’ is redundant
      except perhaps to import instances from ‘Data.Maybe’
    To import instances alone, use: import Data.Maybe()

src/Data/Acid/TemplateHaskell.hs:18:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()

src/Data/Acid/TemplateHaskell.hs:252:15: Warning:
    In the use of ‘classP’
    (imported from Language.Haskell.TH, but defined in Language.Haskell.TH.Lib):
    Deprecated: "As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please use 'conT' and 'appT'."

src/Data/Acid/TemplateHaskell.hs:265:29: Warning:
    In the use of ‘classP’
    (imported from Language.Haskell.TH, but defined in Language.Haskell.TH.Lib):
    Deprecated: "As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please use 'conT' and 'appT'."

src/Data/Acid/TemplateHaskell.hs:286:29: Warning:
    In the use of ‘classP’
    (imported from Language.Haskell.TH, but defined in Language.Haskell.TH.Lib):
    Deprecated: "As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please use 'conT' and 'appT'."
[10 of 15] Compiling Data.Acid.Memory ( src/Data/Acid/Memory.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Memory.o )
[11 of 15] Compiling Data.Acid.Memory.Pure ( src/Data/Acid/Memory/Pure.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Memory/Pure.o )
[12 of 15] Compiling Data.Acid.Remote ( src/Data/Acid/Remote.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Remote.o )
[13 of 15] Compiling Data.Acid.Advanced ( src/Data/Acid/Advanced.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Advanced.o )
[14 of 15] Compiling Data.Acid.Local  ( src/Data/Acid/Local.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid/Local.o )

src/Data/Acid/Local.hs:36:1: Warning:
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
[15 of 15] Compiling Data.Acid        ( src/Data/Acid.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.5.0/build/Data/Acid.o )
In-place registering acid-state-0.14.0...
Installing library in
/Users/austin/Other/Cloud9Server/.stack-work/install/x86_64-osx/lts-5.11/7.10.3/lib/x86_64-osx-ghc-7.10.3/acid-state-0.14.0-9ivCTpk9Z75LcGAjws7Fxb
Registering acid-state-0.14.0...
